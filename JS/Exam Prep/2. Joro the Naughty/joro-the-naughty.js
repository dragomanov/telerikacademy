// Generated by CoffeeScript 1.7.1
(function() {
  var Solve, test1, test2, test3, test4, test5;

  Solve = function(args) {
    var caught, col, cols, escaped, jumpNo, jumps, numberOfJumps, posCol, posRow, row, rows, sumOfFields, totalNumberOfJumps, visited, _i, _j, _ref, _ref1, _ref2, _ref3;
    _ref = args[0].split(" ").map(Number), rows = _ref[0], cols = _ref[1], numberOfJumps = _ref[2];
    _ref1 = args[1].split(" ").map(Number), posRow = _ref1[0], posCol = _ref1[1];
    jumps = args.slice(2).map(function(x) {
      return x.split(" ").map(Number);
    });
    sumOfFields = posRow * cols + posCol + 1;
    totalNumberOfJumps = 0;
    escaped = false;
    caught = false;
    jumpNo = 0;
    visited = [];
    for (row = _i = 0; 0 <= rows ? _i < rows : _i > rows; row = 0 <= rows ? ++_i : --_i) {
      visited[row] = [];
      for (col = _j = 0; 0 <= cols ? _j < cols : _j > cols; col = 0 <= cols ? ++_j : --_j) {
        visited[row][col] = false;
      }
    }
    while ((0 <= (_ref2 = posRow + jumps[jumpNo][0]) && _ref2 < rows) && (0 <= (_ref3 = posCol + jumps[jumpNo][1]) && _ref3 < cols)) {
      visited[posRow][posCol] = true;
      posRow += jumps[jumpNo][0];
      posCol += jumps[jumpNo][1];
      totalNumberOfJumps++;
      sumOfFields += posRow * cols + posCol + 1;
      jumpNo = ++jumpNo % numberOfJumps;
      if (visited[posRow][posCol]) {
        return "caught " + totalNumberOfJumps;
      }
    }
    return "escaped " + sumOfFields;
  };

  test1 = ["6 7 3", "0 0", "2 2", "-2 2", "3 -1"];

  test2 = ["1 1 3", "0 0", "2 2", "-2 2", "3 -1"];

  test3 = ["6 7 3", "0 0", "2 2", "-2 -2", "3 -1"];

  test4 = ["6 7 1", "0 0", "2 2"];

  test5 = ["6 7 3", "5 6", "2 2", "-2 2", "3 -1"];

  console.log(Solve(test1));

  console.log(Solve(test2));

  console.log(Solve(test3));

  console.log(Solve(test4));

  console.log(Solve(test5));

}).call(this);
