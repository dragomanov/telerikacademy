using System;

class Exchange3Bits
{
    static void Main()
    {
        // "10101 010 00100101 00111100 10 110 011"

        Console.Write("Enter an integer number: ");
        uint number;

        // Check if the entered string is a valid integer
        while (!uint.TryParse(Console.ReadLine(), out number))
        {
            Console.Write("An integer is a whole number in the range [" + uint.MinValue + ", " + uint.MaxValue + "]. Try again: ");
        }

        string bitStr = Convert.ToString(number, 2).PadLeft(32, '0');
        string new_bitStr = bitStr;
        Console.WriteLine(("The number " + number + " is binary is:").PadRight(38) + bitStr);

        // Swap bits
        for (int i = 0; i < 3; i++)
        {
            char bit1 = new_bitStr[32 - i - 3 - 1];
            char bit2 = new_bitStr[32 - i - 24 - 1];
            new_bitStr = new_bitStr.Substring(0, 32 - i - 24 - 1)
                         + bit1
                         + new_bitStr.Substring(32 - i - 24 - 1 + 1, 20)
                         + bit2
                         + new_bitStr.Substring(32 - i - 3);
        }

        // Convert the new_bitStr from string to unsigned integer
        uint new_num = 0;
        for (int i = 0; i < 32; i++)
        {
            new_num += (uint)(Math.Pow(2, i) * (((byte)new_bitStr[32 - i - 1]) - 48));
        }

        Console.WriteLine(("The new number is: " + new_num).PadRight(37) + "(" + new_bitStr + ")");

        Console.WriteLine();
        Console.Write(" ");
        for (int i = 10; i < 32; i++)
        {
            Console.Write(((42 - i - 1) / 10).ToString().PadLeft(2));
        }
        Console.WriteLine();

        Console.Write(" ");
        for (int i = 0; i < 32; i++)
        {
            Console.Write(((32 - i - 1) % 10).ToString().PadLeft(2));
        }
        Console.WriteLine();

        Console.WriteLine(new String('-', 67));

        Console.Write("| ");
        for (int i = 0; i < 32; i++)
        {
            Console.Write("{0} ", bitStr[i]);
        }
        Console.WriteLine("| " + number);

        Console.WriteLine(new String('-', 67));

        Console.Write("| ");
        for (int i = 0; i < 32; i++)
        {
            Console.Write("{0} ", new_bitStr[i]);
        }
        Console.WriteLine("| " + new_num);

        Console.WriteLine(new String('-', 67));
    }
}
